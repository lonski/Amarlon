language: cpp
compiler:
  - clang
branches:
  only:
    - master
cache:
    apt
before_install:
    - echo -e "Ubuntu version:"
    - lsb_release -sc
    - echo "yes" | sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
    - echo "yes" | sudo add-apt-repository ppa:ubuntu-toolchain-r/test
# LLVM
    - sudo sh -c "echo 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.4 main' >> /etc/apt/sources.list"
    - sudo sh -c "echo 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main' >> /etc/apt/sources.list"
    - sudo sh -c "echo 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.6 main' >> /etc/apt/sources.list"
    - sudo sh -c "echo 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise main' >> /etc/apt/sources.list"
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -

    - sudo apt-get update -qq
install:
#    - sudo apt-get install -qq gcc-5 g++-5
#    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20 --slave /usr/bin/g++ g++ /usr/bin/g++-5
#    - sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
#    - sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
#    - sudo update-alternatives --set cc /usr/bin/gcc
#    - sudo update-alternatives --set c++ /usr/bin/g++
    - sudo apt-get install -qq $LLVM_PACKAGE "clang-$CLANG_VERSION" 
    - sudo apt-get install -qq valgrind cppcheck
    - sudo apt-get install -qq mercurial libsdl-dev
    - sudo apt-get install -qq libgtest-dev google-mock
    - sudo apt-get install -qq libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev libboost-wave-dev

    # Use a recent version of clang++ to build the compiler (with C++11 support);
    # use the previously installed clang version (since installing one tends to remove another).
    - if [[ "${CXX}" == "clang++" ]]; then export CXX="clang++-$CLANG_VERSION"; fi
    - clang++ --version
#    - gcc --version
before_script:
    - sudo mkdir /usr/src/gtest/build
    - cd /usr/src/gtest/build
    - sudo cmake .. -DBUILD_SHARED_LIBS=1
    - sudo make -j`grep -c processor /proc/cpuinfo`
    - cd -
    - mkdir ./lib
    - sudo ln -s /usr/src/gtest/build/libgtest.so /usr/local/lib/libgtest.so
    - sudo ln -s /usr/src/gtest/build/libgtest_main.so /usr/local/lib/libgtest_main.so
    - hg clone https://bitbucket.org/jice/libtcod
    - cd libtcod
    - make -f makefiles/makefile-linux debug
    - cp ./libtcod_debug.so ../lib/libtcod_debug.so
    - cp ./libtcodxx_debug.so ../lib/libtcodxx_debug.so
    - cp ./libtcod_debug.so ../lib/libtcod.so
    - cp ./libtcodxx_debug.so ../lib/libtcodxx.so
    - cd -
    - cd lib
    - ln -s libtcod.so libtcod.so.1
    - ln -s libtcodxx.so libtcodxx.so.1
    - cd -
    - mkdir build
    - cd build
script:
    - cmake ..
    - make -j`grep -c processor /proc/cpuinfo`
    - LD_LIBRARY_PATH=../lib valgrind --error-exitcode=1 --track-origins=yes --leak-check=full ./ut_amarlon
    - cd -
    - cppcheck --enable=style -I . -f -q --std=c++11 ./src ./test

env:
    # Build with LLVM 3.7
    # - BUILD_TYPE=Debug LLVM_PACKAGE="llvm-3.7 llvm-3.7-dev" CLANG_VERSION="3.7"
    - BUILD_TYPE=Release LLVM_PACKAGE="llvm-3.7 llvm-3.7-dev" CLANG_VERSION="3.7"

matrix:
  allow_failures:
  # Allow failures when using LLVM 3.7 since it's in development.
#  - env: BUILD_TYPE=Debug LLVM_PACKAGE="llvm-3.7 llvm-3.7-dev" CLANG_VERSION="3.7"
  - env: BUILD_TYPE=Release LLVM_PACKAGE="llvm-3.7 llvm-3.7-dev" CLANG_VERSION="3.7"

notifications:
  recipients:
    - lgromanowski+travis.ci@gmail.com
    - michal.lonski+travis.ci@gmail.com
  email:
    on_success: change
    on_failure: always
